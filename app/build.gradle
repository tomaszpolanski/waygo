buildscript {
    ext.kotlin_version = '0.12.613'
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    dexOptions {
        preDexLibraries false
        incremental true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        // For Okio
        // https://github.com/square/okio/issues/58
        warning 'InvalidPackage'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

}

retrolambda {
    jvmArgs '-noverify'
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'io.reactivex:rxjava:1.0.11'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile ('com.squareup.okhttp:okhttp-urlconnection:2.0.0') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
    }
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'

    // Leak tracing
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Unit test build
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'

    androidTestCompile 'com.android.support:support-annotations:22.2.0'
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile "com.google.dexmaker:dexmaker:1.2"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:1.2"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// Get the path to ADB.  Required when running tests directly from Android Studio.
// Source: http://stackoverflow.com/a/26771087/112705
def adb = android.getAdbExe().toString()
def packageName = 'com.waygo'
def command = "$adb shell pm grant $packageName android.permission.SET_ANIMATION_SCALE".split(' ')

task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    println ""
    println '================================================='
    println 'Granting permission to disable animations'
    commandLine command
    println '================================================='
}

afterEvaluate {
    // When launching individual tests from Android Studio, it seems that only the assemble tasks
    // get called directly, not the install* versions
    tasks.each { task ->
        if (task.name.startsWith('assembleDebugAndroidTest')) {
            task.dependsOn grantAnimationPermission
        }
    }
}
